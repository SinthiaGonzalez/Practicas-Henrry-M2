{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geffe\\\\Desktop\\\\HENRY-M2-Practicas\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\01 - Exercises\\\\src\\\\components\\\\Zoo\\\\Zoo.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// eslint-disable-next-line no-unused-vars\nimport Animals from \"../Animals/Animals\";\n// eslint-disable-next-line no-unused-vars\nimport Species from \"../Species/Species\";\n// import styledZoo from \"./Zoo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Zoo() {\n  _s();\n  /*creamos la varible distractory zoo,setzoo*/\n  /*añadimos las propiedades que queremos que tenga y que despues pasaremos por props*/\n  const [zoo, setZoo] = React.useState({\n    zooName: '',\n    animals: [],\n    species: [],\n    allAnimals: []\n  });\n\n  /*creamos el React.useEfects para hacer una peticion api, este metodo de react siempre lleva dos parametros, uno es una function y la otra es o un [] vacio indicando que el efect solo se ejecutara 1 vez, mas adelante se profundizara mas*/\n\n  React.useEffect(() => {}, []);\n\n  /*creamos la funcion handleinputchange*/\n  const handleInputChange = event => {\n    /*creamos una captura del valor de zooname*/\n    setZoo(prevZoo => ({\n      ...prevZoo,\n      zooName: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"zooname\",\n      children: \"Zoo Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleInputChange,\n      type: \"text\",\n      id: \"zooname\",\n      value: zoo.zooName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: zoo.zooName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Zoo, \"l//yTdjSVZRm+YMbbWB6LELFYwA=\");\n_c = Zoo;\nvar _c;\n$RefreshReg$(_c, \"Zoo\");","map":{"version":3,"names":["React","Animals","Species","jsxDEV","_jsxDEV","Zoo","_s","zoo","setZoo","useState","zooName","animals","species","allAnimals","useEffect","handleInputChange","event","prevZoo","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","_c","$RefreshReg$"],"sources":["C:/Users/geffe/Desktop/HENRY-M2-Practicas/FT-M2/08-React-Estado-LifeCycle/homework/01 - Exercises/src/components/Zoo/Zoo.jsx"],"sourcesContent":["import React from \"react\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Animals from \"../Animals/Animals\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Species from \"../Species/Species\";\r\n// import styledZoo from \"./Zoo.module.css\";\r\n\r\nexport default function Zoo() {\r\n  /*creamos la varible distractory zoo,setzoo*/\r\n  /*añadimos las propiedades que queremos que tenga y que despues pasaremos por props*/\r\n  const [zoo, setZoo] = React.useState({\r\n    zooName:'',\r\n    animals:[],\r\n    species:[], \r\n    allAnimals:[],\r\n    });\r\n\r\n/*creamos el React.useEfects para hacer una peticion api, este metodo de react siempre lleva dos parametros, uno es una function y la otra es o un [] vacio indicando que el efect solo se ejecutara 1 vez, mas adelante se profundizara mas*/\r\n\r\n  React.useEffect(() => {\r\n    \r\n  }, []);\r\n\r\n\r\n  /*creamos la funcion handleinputchange*/\r\n  const handleInputChange = (event) => {\r\n    /*creamos una captura del valor de zooname*/\r\n    setZoo(prevZoo => ({...prevZoo, zooName: event.target.value}));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"zooname\">Zoo Name:</label>\r\n      <input\r\n       onChange={handleInputChange}\r\n       type=\"text\" \r\n       id=\"zooname\"\r\n       value={zoo.zooName}>\r\n\r\n       </input>\r\n\r\n      <h1>{zoo.zooName}</h1>\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,OAAO,MAAM,oBAAoB;AACxC;AACA,OAAOC,OAAO,MAAM,oBAAoB;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC;IACnCC,OAAO,EAAC,EAAE;IACVC,OAAO,EAAC,EAAE;IACVC,OAAO,EAAC,EAAE;IACVC,UAAU,EAAC;EACX,CAAC,CAAC;;EAEN;;EAEEb,KAAK,CAACc,SAAS,CAAC,MAAM,CAEtB,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACAR,MAAM,CAACS,OAAO,KAAK;MAAC,GAAGA,OAAO;MAAEP,OAAO,EAAEM,KAAK,CAACE,MAAM,CAACC;IAAK,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAOiB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CrB,OAAA;MACCsB,QAAQ,EAAEX,iBAAkB;MAC5BY,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,SAAS;MACZT,KAAK,EAAEZ,GAAG,CAACG;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CAAC,eAETrB,OAAA;MAAAgB,QAAA,EAAKb,GAAG,CAACG;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEV;AAACnB,EAAA,CAtCuBD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}