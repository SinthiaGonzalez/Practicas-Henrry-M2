{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geffe\\\\Desktop\\\\HENRY-M2-Practicas\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\01 - Exercises\\\\src\\\\components\\\\Zoo\\\\Zoo.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// eslint-disable-next-line no-unused-vars\nimport Animals from \"../Animals/Animals\";\n// eslint-disable-next-line no-unused-vars\nimport Species from \"../Species/Species\";\n// import styledZoo from \"./Zoo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Zoo() {\n  _s();\n  /*creamos la varible distractory zoo,setzoo*/\n  /*añadimos las propiedades que queremos que tenga y que despues pasaremos por props*/\n  const [zoo, setZoo] = React.useState({\n    zooName: '',\n    animals: [],\n    species: [],\n    allAnimals: []\n  });\n\n  /*creamos el React.useEfects para hacer una peticion api, este metodo de react siempre lleva dos parametros, uno es una function y la otra es o un [] vacio indicando que el efect solo se ejecutara 1 vez, mas adelante se profundizara mas*/\n\n  React.useEffect(() => {\n    /*dentro de la función colocaremos la petición fetch*/\n    fetch('http://localhost:3001/zoo').then(res => res.json()).then(data => {\n      console.log(data);\n      setZoo({\n        ...zoo,\n        animals: data.animals,\n        species: data.species,\n        allAnimals: data.animals\n      });\n    }).catch(error => console.log(error));\n  }, []);\n\n  /*creamos la funcion handleinputchange, event toma los cambios en el input.target lo que hace es buscar el elemento en html que genero el cambio de event y guardarlo en este caso seria el input*/\n  const handleInputChange = event => {\n    /*creamos una captura del valor de zooname*/\n    setZoo(prevZoo => ({\n      ...prevZoo,\n      zooName: event.target.value\n    }));\n  };\n  /*creamos las funciones handlespecies y handleAllspecies.*/\n  const handleSpecies = event => {\n    const selectedSpecies = event.target.value;\n    const filteredAnimals = zoo.allAnimals.filter(animal => animal.specie === selectedSpecies);\n    console.log(filteredAnimals);\n    setZoo(prevZoo => ({\n      ...prevZoo,\n      species: selectedSpecies,\n      animals: filteredAnimals\n    }));\n  };\n  const handleAllSpecies = () => {\n    setZoo(prevZoo => ({\n      ...prevZoo,\n      species: \"\",\n      animals: prevZoo.allAnimals\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"zooname\",\n      children: \"Zoo Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleInputChange,\n      type: \"text\",\n      id: \"zooname\",\n      value: zoo.zooName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: zoo.zooName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Species, {\n      species: zoo.species,\n      handleSpecies: handleSpecies,\n      handleAllSpecies: handleAllSpecies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Animals, {\n      animals: zoo.animals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  /* pasamos las props a los componentes Species y*/\n}\n_s(Zoo, \"l//yTdjSVZRm+YMbbWB6LELFYwA=\");\n_c = Zoo;\nvar _c;\n$RefreshReg$(_c, \"Zoo\");","map":{"version":3,"names":["React","Animals","Species","jsxDEV","_jsxDEV","Zoo","_s","zoo","setZoo","useState","zooName","animals","species","allAnimals","useEffect","fetch","then","res","json","data","console","log","catch","error","handleInputChange","event","prevZoo","target","value","handleSpecies","selectedSpecies","filteredAnimals","filter","animal","specie","handleAllSpecies","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","_c","$RefreshReg$"],"sources":["C:/Users/geffe/Desktop/HENRY-M2-Practicas/FT-M2/08-React-Estado-LifeCycle/homework/01 - Exercises/src/components/Zoo/Zoo.jsx"],"sourcesContent":["import React from \"react\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Animals from \"../Animals/Animals\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Species from \"../Species/Species\";\r\n// import styledZoo from \"./Zoo.module.css\";\r\n\r\nexport default function Zoo() {\r\n  /*creamos la varible distractory zoo,setzoo*/\r\n  /*añadimos las propiedades que queremos que tenga y que despues pasaremos por props*/\r\n  const [zoo, setZoo] = React.useState({\r\n    zooName:'',\r\n    animals:[],\r\n    species:[], \r\n    allAnimals:[],\r\n    });\r\n\r\n/*creamos el React.useEfects para hacer una peticion api, este metodo de react siempre lleva dos parametros, uno es una function y la otra es o un [] vacio indicando que el efect solo se ejecutara 1 vez, mas adelante se profundizara mas*/\r\n\r\nReact.useEffect(() => {\r\n  /*dentro de la función colocaremos la petición fetch*/\r\n  fetch('http://localhost:3001/zoo')\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      setZoo({\r\n        ...zoo,\r\n        animals: data.animals,\r\n        species: data.species,\r\n        allAnimals: data.animals,\r\n\r\n      });\r\n      \r\n    })\r\n    .catch((error) => console.log(error));\r\n}, []);\r\n\r\n\r\n  /*creamos la funcion handleinputchange, event toma los cambios en el input.target lo que hace es buscar el elemento en html que genero el cambio de event y guardarlo en este caso seria el input*/\r\n  const handleInputChange = (event) => {\r\n    /*creamos una captura del valor de zooname*/\r\n    setZoo(prevZoo => ({...prevZoo, zooName: event.target.value}));\r\n  };\r\n /*creamos las funciones handlespecies y handleAllspecies.*/ \r\n const handleSpecies = (event) => {\r\n  const selectedSpecies = event.target.value;\r\n  const filteredAnimals = zoo.allAnimals.filter(\r\n    (animal) => animal.specie === selectedSpecies\r\n  );\r\n  console.log(filteredAnimals);\r\n  setZoo((prevZoo) => ({ ...prevZoo, species: selectedSpecies, animals: filteredAnimals }));\r\n};\r\n\r\nconst handleAllSpecies = () => {\r\n  setZoo((prevZoo) => ({ ...prevZoo, species: \"\", animals: prevZoo.allAnimals }));\r\n};\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"zooname\">Zoo Name:</label>\r\n      <input\r\n       onChange={handleInputChange}\r\n       type=\"text\" \r\n       id=\"zooname\"\r\n       value={zoo.zooName}>\r\n\r\n       </input>\r\n      \r\n      <h1>{zoo.zooName}</h1>\r\n      \r\n      <Species species={zoo.species} handleSpecies={handleSpecies} handleAllSpecies={handleAllSpecies} />\r\n      <Animals animals={zoo.animals} />\r\n    </div>\r\n     \r\n  );\r\n   /* pasamos las props a los componentes Species y*/\r\n   \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}